方法一定是放在类里面的
class定义的就是类
static静态 表示这个方法属于这个类 可以直接由类名调用
同一个类中直接用
不写访问修饰符默认就是私有的
在静态（static）的前面一半都加上访问修饰符{ }
类前面不能加私有的访问修饰符  没有私有类
要想使用另外一个类的项的记得一定要添加引用
要想当前项目被其他的项目访问记得要公开访问修饰符（public）要在他的上面添加using.项目名称
要想调用另一个项目的方法 记得要公开访问修饰符
访问修饰符可以修饰方法/类/类成员
类的默认修饰符是公共的（internal）
变量一定是私有的
面向对象的三大特征;封装，继承，多态。
在类中声明的是字段（field） 在方法中声明的是变量（variable）
变量优先使用的是当前的变量
字段和变量同名，在同一个方法中，变量优先。
字段属于类 通过类调用 变量不属于任何成员，可以直接使用。
有static是静态，没有static是实例
实例就是对象
静态的属于类 非静态的属于对象
new一个对象就是实例化一个类
new了一个对象之后只能通过对象调用了 在使用类调用就不行了
Student lgy = new Student   lgy.Name = "廖光银" 可以简写成 new Student().Name = "廖光银"
凡是有class声明的类型都是 引用类型
指向引用类型的变量都是引用类型变量 存放的是是一个地址不是一个实质性的数据
int float bool都是值类型 string是一种特殊的引用类型
值类型存放的是值而不是地址
引用类型存放在堆里面，值类型存放在栈或者堆里面
堆就是无序的数据集合
栈是一种先进后出的数据结构
sealed不能被继承的
new 一个类的时候实际上是调用了一个刚才new的那一个类的构造函数
构造函数的（)里面代表的是参数{}中代表的是方法体
构造函数和函数的不同有 构造函数没有返回 构造函数的名字一定是和类名一致的
方法一定有返回 方法如果没有返回值就要给一个void
当参数名和字段名相同时才加this区分 this就是当前对象
const一旦声明，就要赋值；readonly可用延后到constructor 
const只能是int/bool/string等基本类型；readonly可以是其他类型（如Teacher）
const默认static，由类名直接调用；readonly默认是实例成员，由对象调用
const还可用于方法体内修饰变量，readonly不行。
const是在编译时完成赋值，而readonly是在运行时赋值
常量一般都写成大写
实例的可以直接.出来
属性是对字段的封装